<tokens>
<keyword> function </keyword>
<identifier> thing </identifier>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> static </keyword>
<identifier> hello </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<identifier> local </identifier>
<identifier> there </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<identifier> cool_story_bro </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<identifier> string </identifier>
<identifier> omgstring </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> hello </identifier>
<symbol> = </symbol>
<integer> 12 </integer>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> there </identifier>
<symbol> = </symbol>
<integer> 13 </integer>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> omgstring </identifier>
<symbol> = </symbol>
<string> well hello [ there ] [] ' ' ! !  </string>
<symbol> ; </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> hello </identifier>
<symbol> &gt; </symbol>
<identifier> there </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<identifier> sys </identifier>
<symbol> . </symbol>
<identifier> println </identifier>
<symbol> ( </symbol>
<identifier> cool_story_bro </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<keyword> true </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> return </keyword>
<keyword> false </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
</tokens>
